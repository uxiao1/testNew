<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--  引入数据库配置文件  -->
    <context:property-placeholder location="classpath:db-dispatchCenter.properties" ignore-unresolvable="true"  />
    <context:property-placeholder location="classpath:db-nbUser.properties" ignore-unresolvable="true"  />
    <context:property-placeholder location="classpath:db-lorawanUser.properties" ignore-unresolvable="true"  />
    <context:property-placeholder location="classpath:db-tradeSettlement.properties" ignore-unresolvable="true"  />

    <!--数据源-->
<!--    调度中心中自系统-->
    <bean id="dataSource-dispatchCenter"
          class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="username" value="${jdbc.username.dispatchCenter}" />
        <property name="password" value="${jdbc.password.dispatchCenter}" />
        <property name="driverClassName" value="${jdbc.driverClassName.dispatchCenter}" />
        <property name="url" value="${jdbc.url.dispatchCenter}" />
    </bean>
<!--    调度中心中自系统历史数据-->
    <bean id="dataSource-dispatchCenter-history"
          class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="username" value="${jdbc.username.dispatchCenter}" />
        <property name="password" value="${jdbc.password.dispatchCenter}" />
        <property name="driverClassName" value="${jdbc.driverClassName.dispatchCenter}" />
        <property name="url" value="${jdbc.url.dispatchCenter.history}" />
    </bean>
<!--    LoRa 户用表远程集抄系统-->
    <bean id="dataSource-lorawanUser"
          class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="username" value="${jdbc.username.lorawanUser}" />
        <property name="password" value="${jdbc.password.lorawanUser}" />
        <property name="driverClassName" value="${jdbc.driverClassName.lorawanUser}" />
        <property name="url" value="${jdbc.url.lorawanUser}" />
    </bean>
<!--    德尔户用表远程集抄系统-->
    <bean id="dataSource-nbUser"
          class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="username" value="${jdbc.username.nbUser}" />
        <property name="password" value="${jdbc.password.nbUser}" />
        <property name="driverClassName" value="${jdbc.driverClassName.nbUser}" />
        <property name="url" value="${jdbc.url.nbUser}" />
    </bean>
<!--    贸易结算监控系统-->
    <bean id="dataSource-tradeSettlement"
          class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="username" value="${jdbc.username.tradeSettlement}" />
        <property name="password" value="${jdbc.password.tradeSettlement}" />
        <property name="driverClassName" value="${jdbc.driverClassName.tradeSettlement}" />
        <property name="url" value="${jdbc.url.tradeSettlement}" />
    </bean>
<!--    自己的系統 -->
    <bean id="dataSource-analyze"
          class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="username" value="${jdbc.username.dataAnalyze}" />
        <property name="password" value="${jdbc.password.dataAnalyze}" />
        <property name="driverClassName" value="${jdbc.driverClassName.dataAnalyze}" />
        <property name="url" value="${jdbc.url.dataAnalyze}" />
    </bean>


    <!--配置sqlSessionfactoryBean-->
    <bean id="sqlSessionFactory-dispatchCenter" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource-dispatchCenter" />
        <property name="configLocation" value="classpath:SqlMapConfig.xml" />
        <property name="typeAliasesPackage" value="com.zrdh.pojo.dispatchCenter"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:com/zrdh/dao/dispatchCenter/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <bean id="sqlSessionFactory-dispatchCenter-history" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource-dispatchCenter-history" />
        <property name="configLocation" value="classpath:SqlMapConfig.xml" />
        <property name="typeAliasesPackage" value="com.zrdh.pojo.dispatchCenterHistory"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:com/zrdh/dao/dispatchCenter/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <bean id="sqlSessionFactory-lorawanUser" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource-lorawanUser" />
        <property name="configLocation" value="classpath:SqlMapConfig.xml" />
        <property name="typeAliasesPackage" value="com.zrdh.pojo.lorawanUser"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:com/zrdh/dao/lorawanUser/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <bean id="sqlSessionFactory-nbUser" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource-nbUser" />
        <property name="configLocation" value="classpath:SqlMapConfig.xml" />
        <property name="typeAliasesPackage" value="com.zrdh.pojo.nbUser"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:com/zrdh/dao/nbUser/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <bean id="sqlSessionFactory-tradeSettlement" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource-tradeSettlement" />
        <property name="configLocation" value="classpath:SqlMapConfig.xml" />
        <property name="typeAliasesPackage" value="com.zrdh.pojo.tradeSettlement"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:com/zrdh/dao/tradeSettlement/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <bean id="sqlSessionFactory-analyze" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource-analyze" />
        <property name="configLocation" value="classpath:SqlMapConfig.xml" />
        <property name="typeAliasesPackage" value="com.zrdh.pojo.dataAnalyze"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:com/zrdh/dao/dataAnalyze/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>

    <!--扫描dao接口,生成代理对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zrdh.dao.dispatchCenter"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory-dispatchCenter"></property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zrdh.dao.dispatchCenterHistory"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory-dispatchCenter-history"></property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zrdh.dao.nbUser"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory-nbUser"></property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zrdh.dao.lorawanUser"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory-lorawanUser"></property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zrdh.dao.tradeSettlement"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory-tradeSettlement"></property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zrdh.dao.dataAnalyze"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory-analyze"></property>
    </bean>
</beans>